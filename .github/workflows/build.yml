name: build

permissions:
  contents: write

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install deps (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y ninja-build cmake build-essential zip

      - name: Install deps (Windows)
        if: runner.os == 'Windows'
        run: choco install ninja --no-progress

      # macOS generally has cmake; ensure zip is present
      - name: Ensure zip (macOS)
        if: runner.os == 'macOS'
        run: |
          if ! command -v zip >/dev/null 2>&1; then
            brew install zip || true
          fi

      - name: Configure (CMake + Ninja)
        run: cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build -j

      - name: Smoke test
        shell: bash
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            ./build/uaengine.exe --version
          else
            ./build/uaengine --version
          fi

      - name: Package artifact (raw binary)
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ runner.os }}" = "Windows" ]; then
            cp build/uaengine.exe dist/
          else
            cp build/uaengine dist/
          fi

      - name: Zip artifact (OS-named)
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ runner.os }}" = "Windows" ]; then
            7z a uaengine-windows.zip ./build/uaengine.exe > /dev/null
            mv uaengine-windows.zip dist/
          elif [ "${{ runner.os }}" = "macOS" ]; then
            zip -j -q uaengine-macos.zip ./build/uaengine
            mv uaengine-macos.zip dist/
          else
            zip -j -q uaengine-linux.zip ./build/uaengine
            mv uaengine-linux.zip dist/
          fi

      - name: Upload raw artifact
        uses: actions/upload-artifact@v4
        with:
          name: uaengine-${{ runner.os }}
          path: dist/uaengine*

      - name: Upload zipped artifact
        uses: actions/upload-artifact@v4
        with:
          name: uaengine-${{ runner.os }}-zip
          path: dist/*.zip

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*